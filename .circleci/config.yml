version: 2.1
jobs:
  master-build:
    working_directory: ~/cafienne-engine
    machine: true
    environment:
      CODECOV_TOKEN: 4a5fe937-93b9-4ab3-aa50-48e204575a53
    steps:
      - checkout
      - run:
          name: Updating Java and sbt versions
          command: |
            sudo apt-get update
            sudo apt install openjdk-11-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
            java -version
            SBT_VERSION=$(awk -F"=" '/sbt.version/{print $NF}' project/build.properties)
            wget https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
            sudo dpkg -i sbt-$SBT_VERSION.deb
            sbt sbtVersion
      - run:
          name: Unit tests
          command: sbt clean coverage test coverageReport
      - run:
          name: Store Coverage Report
          command: bash <(curl -s https://codecov.io/bash)
      - run:
          name: Clone CMMN-test framework
          command: |
            cd ..
            git clone https://$GIT_USER:$GIT_PASS@github.com/cafienne/cmmn-test-framework.git
      - run:
          name: Install dependencies
          command: |
            cd ..
            cd ./cmmn-test-framework
            npm install
      - run:
          name: Docker login
          command: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Pull docker images
          command: |
            docker-compose -f .circleci/docker-test-inmemory.yml pull
            docker-compose -f .circleci/docker-test-postgresql.yml pull
            docker-compose -f .circleci/docker-test-sqlserver.yml pull
            docker-compose -f .circleci/docker-test-cassandra.yml pull
      - run:
          name: Build docker image
          command: sbt docker:publishLocal

      # Starting docker environment for In-memory testing
      - run:
          name: Up the containers for In-memory testing
          command: |
            sudo docker-compose -f .circleci/docker-test-inmemory.yml up -d
            sleep 15
      - run:
          name: Give permissions
          command: sudo chmod -R 777 ./
      - run:
          name: Docker logs of engine
          command: docker logs cafienne
      - run:
          name: Test engine against framework
          command: |
            cd ..
            cd ./cmmn-test-framework
            npm run dev 8000
      - run:
          name: Stop the containers
          command: |
            docker-compose -f .circleci/docker-test-inmemory.yml stop
            docker rm $(docker ps -a -q)

      # Starting docker environment for Postgresql testing
      - run:
          name: Up the containers for Postgresql testing
          command: |
            sudo docker-compose -f .circleci/docker-test-postgresql.yml up -d
            sleep 15
      - run:
          name: Give permissions
          command: sudo chmod -R 777 ./
      - run:
          name: Docker logs of engine
          command: docker logs cafienne
      - run:
          name: Test engine against framework
          command: |
            cd ..
            cd ./cmmn-test-framework
            npm run dev 8000
      - run:
          name: Stop the containers
          command: |
            docker-compose -f .circleci/docker-test-postgresql.yml stop
            docker rm $(docker ps -a -q)

      # Starting docker environment for Sqlserver testing
      - run:
          name: Up the containers for Sqlserver testing
          command: |
            sudo docker-compose -f .circleci/docker-test-sqlserver.yml up -d
            sleep 15
            sudo docker restart cafienne
            sleep 15
      - run:
          name: Give permissions
          command: sudo chmod -R 777 ./
      - run:
          name: Docker logs of engine
          command: docker logs cafienne
      - run:
          name: Test engine against framework
          command: |
            cd ..
            cd ./cmmn-test-framework
            npm run dev 8000
      - run:
          name: Stop the containers
          command: |
            docker-compose -f .circleci/docker-test-sqlserver.yml stop
            docker rm $(docker ps -a -q)

      # Starting docker environment for Cassandra testing
      - run:
          name: Up the containers for Cassandra testing
          command: |
            sudo docker-compose -f .circleci/docker-test-cassandra.yml up -d
            sleep 20
            sudo docker restart cafienne
            sleep 15
      - run:
          name: Give permissions
          command: sudo chmod -R 777 ./
      - run:
          name: Docker logs of engine
          command: docker logs cafienne
      - run:
          name: Test engine against framework
          command: |
            cd ..
            cd ./cmmn-test-framework
            npm run dev 8000
      - run:
          name: Stop the containers
          command: |
            docker-compose -f .circleci/docker-test-cassandra.yml stop
            docker rm $(docker ps -a -q)
      - run:
          name: Push image to docker hub
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ];
            then
              echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
              docker push cafienne/engine:latest
            else
              echo "Not pushing image to docker hub"
            fi

  branch-build:
    working_directory: ~/cafienne-engine
    machine: true
    environment:
      CODECOV_TOKEN: 4a5fe937-93b9-4ab3-aa50-48e204575a53
    steps:
      - checkout
      - run:
          name: Updating Java and sbt versions
          command: |
            sudo apt-get update
            sudo apt install openjdk-11-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
            java -version
            SBT_VERSION=$(awk -F"=" '/sbt.version/{print $NF}' project/build.properties)
            wget https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
            sudo dpkg -i sbt-$SBT_VERSION.deb
            sbt sbtVersion
      - run:
          name: Unit tests
          command: sbt clean coverage test coverageReport
      - run:
          name: Store Coverage Report
          command: bash <(curl -s https://codecov.io/bash)
      - run:
          name: Clone CMMN-test framework
          command: |
            cd ..
            git clone https://$GIT_USER:$GIT_PASS@github.com/cafienne/cmmn-test-framework.git
      - run:
          name: Install dependencies
          command: |
            cd ..
            cd ./cmmn-test-framework
            npm install
      - run:
          name: Docker login
          command: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Pull docker images
          command: |
            docker-compose -f .circleci/docker-test-inmemory.yml pull
      - run:
          name: Build docker image
          command: sbt docker:publishLocal

      # Starting docker environment for In-memory testing
      - run:
          name: Up the containers for In-memory testing
          command: |
            sudo docker-compose -f .circleci/docker-test-inmemory.yml up -d
            sleep 15
      - run:
          name: Give permissions
          command: sudo chmod -R 777 ./
      - run:
          name: Docker logs of engine
          command: docker logs cafienne
      - run:
          name: Test engine against framework
          command: |
            cd ..
            cd ./cmmn-test-framework
            npm run dev 8000
      - run:
          name: Stop the containers
          command: |
            docker-compose -f .circleci/docker-test-inmemory.yml stop
            docker rm $(docker ps -a -q)

  release-build:
    working_directory: ~/cafienne-engine
    machine: true
    environment:
      CODECOV_TOKEN: 4a5fe937-93b9-4ab3-aa50-48e204575a53
    steps:
      - checkout
      - run:
          name: Updating Java and sbt versions
          command: |
            sudo apt-get update
            sudo apt install openjdk-11-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
            java -version
            SBT_VERSION=$(awk -F"=" '/sbt.version/{print $NF}' project/build.properties)
            wget https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
            sudo dpkg -i sbt-$SBT_VERSION.deb
            sbt sbtVersion
      - run:
          name: Check for version TAG
          command: |
            echo `git describe --tags --exact-match` > ./version.txt
            cat ./version.txt
            TAG=$(cat ./version.txt)
      - run:
          name: Unit tests
          command: sbt clean coverage test coverageReport
      - run:
          name: Store Coverage Report
          command: bash <(curl -s https://codecov.io/bash)
      - run:
          name: Clone CMMN-test framework
          command: |
            cd ..
            git clone https://$GIT_USER:$GIT_PASS@github.com/cafienne/cmmn-test-framework.git
      - run:
          name: Install dependencies
          command: |
            cd ..
            cd ./cmmn-test-framework
            npm install
      - run:
          name: Docker login
          command: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Pull docker images
          command: |
            docker-compose -f .circleci/docker-test-inmemory.yml pull
            docker-compose -f .circleci/docker-test-postgresql.yml pull
            docker-compose -f .circleci/docker-test-sqlserver.yml pull
            docker-compose -f .circleci/docker-test-cassandra.yml pull
      - run:
          name: Build docker image
          command: sbt docker:publishLocal

      # Starting docker environment for In-memory testing
      - run:
          name: Up the containers for In-memory testing
          command: |
            sudo docker-compose -f .circleci/docker-test-inmemory.yml up -d
            sleep 15
      - run:
          name: Give permissions
          command: sudo chmod -R 777 ./
      - run:
          name: Docker logs of engine
          command: docker logs cafienne
      - run:
          name: Test engine against framework
          command: |
            cd ..
            cd ./cmmn-test-framework
            npm run dev 8000
      - run:
          name: Stop the containers
          command: |
            docker-compose -f .circleci/docker-test-inmemory.yml stop
            docker rm $(docker ps -a -q)

      # Starting docker environment for Postgresql testing
      - run:
          name: Up the containers for Postgresql testing
          command: |
            sudo docker-compose -f .circleci/docker-test-postgresql.yml up -d
            sleep 15
      - run:
          name: Give permissions
          command: sudo chmod -R 777 ./
      - run:
          name: Docker logs of engine
          command: docker logs cafienne
      - run:
          name: Test engine against framework
          command: |
            cd ..
            cd ./cmmn-test-framework
            npm run dev 8000
      - run:
          name: Stop the containers
          command: |
            docker-compose -f .circleci/docker-test-postgresql.yml stop
            docker rm $(docker ps -a -q)

      # Starting docker environment for Sqlserver testing
      - run:
          name: Up the containers for Sqlserver testing
          command: |
            sudo docker-compose -f .circleci/docker-test-sqlserver.yml up -d
            sleep 15
            sudo docker restart cafienne
            sleep 15
      - run:
          name: Give permissions
          command: sudo chmod -R 777 ./
      - run:
          name: Docker logs of engine
          command: docker logs cafienne
      - run:
          name: Test engine against framework
          command: |
            cd ..
            cd ./cmmn-test-framework
            npm run dev 8000
      - run:
          name: Stop the containers
          command: |
            docker-compose -f .circleci/docker-test-sqlserver.yml stop
            docker rm $(docker ps -a -q)

      # Starting docker environment for Cassandra testing
      - run:
          name: Up the containers for Cassandra testing
          command: |
            sudo docker-compose -f .circleci/docker-test-cassandra.yml up -d
            sleep 20
            sudo docker restart cafienne
            sleep 15
      - run:
          name: Give permissions
          command: sudo chmod -R 777 ./
      - run:
          name: Docker logs of engine
          command: docker logs cafienne
      - run:
          name: Test engine against framework
          command: |
            cd ..
            cd ./cmmn-test-framework
            npm run dev 8000
      - run:
          name: Stop the containers
          command: |
            docker-compose -f .circleci/docker-test-cassandra.yml stop
            docker rm $(docker ps -a -q)
      - run:
          name: Push image to docker hub
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker tag cafienne/engine:latest cafienne/engine:$CIRCLE_TAG
            docker push cafienne/engine:$CIRCLE_TAG


workflows:
  version: 2
  ci:
    jobs:
      - master-build:
          filters:
            branches:
              only:
                - master
                - dependency-updates
      - branch-build:
          filters:
            branches:
              ignore:
                - master
                - dependency-updates
      - release-build:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/